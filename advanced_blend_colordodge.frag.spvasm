; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 10
; Bound: 305
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %114 %142 %157
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %104 DescriptorSet 0
               OpDecorate %104 Binding 1
               OpDecorate %108 DescriptorSet 0
               OpDecorate %108 Binding 2
               OpDecorate %114 Location 0
               OpMemberDecorate %_struct_120 0 Offset 0
               OpMemberDecorate %_struct_120 1 Offset 16
               OpDecorate %_struct_120 Block
               OpDecorate %122 DescriptorSet 0
               OpDecorate %122 Binding 0
               OpDecorate %137 DescriptorSet 0
               OpDecorate %137 Binding 3
               OpDecorate %139 DescriptorSet 0
               OpDecorate %139 Binding 4
               OpDecorate %142 Location 1
               OpDecorate %157 Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
       %bool = OpTypeBool
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
         %56 = OpConstantComposite %v3float %float_1 %float_1 %float_1
         %64 = OpConstantComposite %v3float %float_0 %float_0 %float_0
         %85 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
        %102 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_102 = OpTypePointer UniformConstant %102
        %104 = OpVariable %_ptr_UniformConstant_102 UniformConstant
        %106 = OpTypeSampler
%_ptr_UniformConstant_106 = OpTypePointer UniformConstant %106
        %108 = OpVariable %_ptr_UniformConstant_106 UniformConstant
        %110 = OpTypeSampledImage %102
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
        %114 = OpVariable %_ptr_Input_v2float Input
%_struct_120 = OpTypeStruct %float %v4float
%_ptr_Uniform__struct_120 = OpTypePointer Uniform %_struct_120
        %122 = OpVariable %_ptr_Uniform__struct_120 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
        %137 = OpVariable %_ptr_UniformConstant_102 UniformConstant
        %139 = OpVariable %_ptr_UniformConstant_106 UniformConstant
        %142 = OpVariable %_ptr_Input_v2float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
        %157 = OpVariable %_ptr_Output_v4float Output
          %4 = OpFunction %void None %3
          %5 = OpLabel
        %105 = OpLoad %102 %104
        %109 = OpLoad %106 %108
        %111 = OpSampledImage %110 %105 %109
        %115 = OpLoad %v2float %114
        %116 = OpImageSampleImplicitLod %v4float %111 %115
               OpSelectionMerge %198 None
               OpSwitch %uint_0 %180
        %180 = OpLabel
        %182 = OpCompositeExtract %float %116 3
        %183 = OpFOrdEqual %bool %182 %float_0
               OpSelectionMerge %185 None
               OpBranchConditional %183 %184 %185
        %184 = OpLabel
               OpBranch %198
        %185 = OpLabel
        %187 = OpVectorShuffle %v3float %116 %116 0 1 2
        %190 = OpCompositeConstruct %v3float %182 %182 %182
        %191 = OpFDiv %v3float %187 %190
        %194 = OpCompositeExtract %float %191 0
        %195 = OpCompositeExtract %float %191 1
        %196 = OpCompositeExtract %float %191 2
        %197 = OpCompositeConstruct %v4float %194 %195 %196 %182
               OpBranch %198
        %198 = OpLabel
        %302 = OpPhi %v4float %85 %184 %197 %185
        %126 = OpAccessChain %_ptr_Uniform_float %122 %int_0
        %127 = OpLoad %float %126
        %128 = OpFOrdGreaterThan %bool %127 %float_0
               OpSelectionMerge %131 None
               OpBranchConditional %128 %130 %136
        %130 = OpLabel
        %134 = OpAccessChain %_ptr_Uniform_v4float %122 %int_1
        %135 = OpLoad %v4float %134
               OpBranch %131
        %136 = OpLabel
        %138 = OpLoad %102 %137
        %140 = OpLoad %106 %139
        %141 = OpSampledImage %110 %138 %140
        %143 = OpLoad %v2float %142
        %144 = OpImageSampleImplicitLod %v4float %141 %143
               OpSelectionMerge %222 None
               OpSwitch %uint_0 %204
        %204 = OpLabel
        %206 = OpCompositeExtract %float %144 3
        %207 = OpFOrdEqual %bool %206 %float_0
               OpSelectionMerge %209 None
               OpBranchConditional %207 %208 %209
        %208 = OpLabel
               OpBranch %222
        %209 = OpLabel
        %211 = OpVectorShuffle %v3float %144 %144 0 1 2
        %214 = OpCompositeConstruct %v3float %206 %206 %206
        %215 = OpFDiv %v3float %211 %214
        %218 = OpCompositeExtract %float %215 0
        %219 = OpCompositeExtract %float %215 1
        %220 = OpCompositeExtract %float %215 2
        %221 = OpCompositeConstruct %v4float %218 %219 %220 %206
               OpBranch %222
        %222 = OpLabel
        %303 = OpPhi %v4float %85 %208 %221 %209
               OpBranch %131
        %131 = OpLabel
        %304 = OpPhi %v4float %135 %130 %303 %222
        %151 = OpVectorShuffle %v3float %302 %302 0 1 2
        %154 = OpVectorShuffle %v3float %304 %304 0 1 2
        %234 = OpFSub %v3float %56 %154
        %235 = OpFDiv %v3float %151 %234
        %236 = OpExtInst %v3float %1 FMin %56 %235
        %253 = OpExtInst %v3float %1 FAbs %151
        %255 = OpCompositeExtract %float %253 0
        %256 = OpFOrdLessThan %bool %255 %float_9_99999975en05
        %257 = OpSelect %float %256 %float_1 %float_0
        %259 = OpCompositeExtract %float %253 1
        %260 = OpFOrdLessThan %bool %259 %float_9_99999975en05
        %261 = OpSelect %float %260 %float_1 %float_0
        %263 = OpCompositeExtract %float %253 2
        %264 = OpFOrdLessThan %bool %263 %float_9_99999975en05
        %265 = OpSelect %float %264 %float_1 %float_0
        %266 = OpCompositeConstruct %v3float %257 %261 %265
        %240 = OpExtInst %v3float %1 FMix %236 %64 %266
        %273 = OpFSub %v3float %154 %56
        %274 = OpExtInst %v3float %1 FAbs %273
        %276 = OpCompositeExtract %float %274 0
        %277 = OpFOrdLessThan %bool %276 %float_9_99999975en05
        %278 = OpSelect %float %277 %float_1 %float_0
        %280 = OpCompositeExtract %float %274 1
        %281 = OpFOrdLessThan %bool %280 %float_9_99999975en05
        %282 = OpSelect %float %281 %float_1 %float_0
        %284 = OpCompositeExtract %float %274 2
        %285 = OpFOrdLessThan %bool %284 %float_9_99999975en05
        %286 = OpSelect %float %285 %float_1 %float_0
        %287 = OpCompositeConstruct %v3float %278 %282 %286
        %244 = OpExtInst %v3float %1 FMix %240 %56 %287
        %160 = OpCompositeExtract %float %304 3
        %161 = OpVectorTimesScalar %v3float %244 %160
        %164 = OpCompositeExtract %float %161 0
        %165 = OpCompositeExtract %float %161 1
        %166 = OpCompositeExtract %float %161 2
        %167 = OpCompositeConstruct %v4float %164 %165 %166 %160
               OpStore %157 %167
               OpReturn
               OpFunctionEnd
