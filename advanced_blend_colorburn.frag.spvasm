; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 10
; Bound: 309
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %116 %144 %159
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %106 DescriptorSet 0
               OpDecorate %106 Binding 1
               OpDecorate %110 DescriptorSet 0
               OpDecorate %110 Binding 2
               OpDecorate %116 Location 0
               OpMemberDecorate %_struct_122 0 Offset 0
               OpMemberDecorate %_struct_122 1 Offset 16
               OpDecorate %_struct_122 Block
               OpDecorate %124 DescriptorSet 0
               OpDecorate %124 Binding 0
               OpDecorate %139 DescriptorSet 0
               OpDecorate %139 Binding 3
               OpDecorate %141 DescriptorSet 0
               OpDecorate %141 Binding 4
               OpDecorate %144 Location 1
               OpDecorate %159 Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
       %bool = OpTypeBool
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
         %56 = OpConstantComposite %v3float %float_1 %float_1 %float_1
         %72 = OpConstantComposite %v3float %float_0 %float_0 %float_0
         %87 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
        %104 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_104 = OpTypePointer UniformConstant %104
        %106 = OpVariable %_ptr_UniformConstant_104 UniformConstant
        %108 = OpTypeSampler
%_ptr_UniformConstant_108 = OpTypePointer UniformConstant %108
        %110 = OpVariable %_ptr_UniformConstant_108 UniformConstant
        %112 = OpTypeSampledImage %104
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
        %116 = OpVariable %_ptr_Input_v2float Input
%_struct_122 = OpTypeStruct %float %v4float
%_ptr_Uniform__struct_122 = OpTypePointer Uniform %_struct_122
        %124 = OpVariable %_ptr_Uniform__struct_122 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
        %139 = OpVariable %_ptr_UniformConstant_104 UniformConstant
        %141 = OpVariable %_ptr_UniformConstant_108 UniformConstant
        %144 = OpVariable %_ptr_Input_v2float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
        %159 = OpVariable %_ptr_Output_v4float Output
          %4 = OpFunction %void None %3
          %5 = OpLabel
        %107 = OpLoad %104 %106
        %111 = OpLoad %108 %110
        %113 = OpSampledImage %112 %107 %111
        %117 = OpLoad %v2float %116
        %118 = OpImageSampleImplicitLod %v4float %113 %117
               OpSelectionMerge %200 None
               OpSwitch %uint_0 %182
        %182 = OpLabel
        %184 = OpCompositeExtract %float %118 3
        %185 = OpFOrdEqual %bool %184 %float_0
               OpSelectionMerge %187 None
               OpBranchConditional %185 %186 %187
        %186 = OpLabel
               OpBranch %200
        %187 = OpLabel
        %189 = OpVectorShuffle %v3float %118 %118 0 1 2
        %192 = OpCompositeConstruct %v3float %184 %184 %184
        %193 = OpFDiv %v3float %189 %192
        %196 = OpCompositeExtract %float %193 0
        %197 = OpCompositeExtract %float %193 1
        %198 = OpCompositeExtract %float %193 2
        %199 = OpCompositeConstruct %v4float %196 %197 %198 %184
               OpBranch %200
        %200 = OpLabel
        %306 = OpPhi %v4float %87 %186 %199 %187
        %128 = OpAccessChain %_ptr_Uniform_float %124 %int_0
        %129 = OpLoad %float %128
        %130 = OpFOrdGreaterThan %bool %129 %float_0
               OpSelectionMerge %133 None
               OpBranchConditional %130 %132 %138
        %132 = OpLabel
        %136 = OpAccessChain %_ptr_Uniform_v4float %124 %int_1
        %137 = OpLoad %v4float %136
               OpBranch %133
        %138 = OpLabel
        %140 = OpLoad %104 %139
        %142 = OpLoad %108 %141
        %143 = OpSampledImage %112 %140 %142
        %145 = OpLoad %v2float %144
        %146 = OpImageSampleImplicitLod %v4float %143 %145
               OpSelectionMerge %224 None
               OpSwitch %uint_0 %206
        %206 = OpLabel
        %208 = OpCompositeExtract %float %146 3
        %209 = OpFOrdEqual %bool %208 %float_0
               OpSelectionMerge %211 None
               OpBranchConditional %209 %210 %211
        %210 = OpLabel
               OpBranch %224
        %211 = OpLabel
        %213 = OpVectorShuffle %v3float %146 %146 0 1 2
        %216 = OpCompositeConstruct %v3float %208 %208 %208
        %217 = OpFDiv %v3float %213 %216
        %220 = OpCompositeExtract %float %217 0
        %221 = OpCompositeExtract %float %217 1
        %222 = OpCompositeExtract %float %217 2
        %223 = OpCompositeConstruct %v4float %220 %221 %222 %208
               OpBranch %224
        %224 = OpLabel
        %307 = OpPhi %v4float %87 %210 %223 %211
               OpBranch %133
        %133 = OpLabel
        %308 = OpPhi %v4float %137 %132 %307 %224
        %153 = OpVectorShuffle %v3float %306 %306 0 1 2
        %156 = OpVectorShuffle %v3float %308 %308 0 1 2
        %235 = OpFSub %v3float %56 %153
        %237 = OpFDiv %v3float %235 %156
        %238 = OpExtInst %v3float %1 FMin %56 %237
        %240 = OpFSub %v3float %56 %238
        %256 = OpFSub %v3float %153 %56
        %257 = OpExtInst %v3float %1 FAbs %256
        %259 = OpCompositeExtract %float %257 0
        %260 = OpFOrdLessThan %bool %259 %float_9_99999975en05
        %261 = OpSelect %float %260 %float_1 %float_0
        %263 = OpCompositeExtract %float %257 1
        %264 = OpFOrdLessThan %bool %263 %float_9_99999975en05
        %265 = OpSelect %float %264 %float_1 %float_0
        %267 = OpCompositeExtract %float %257 2
        %268 = OpFOrdLessThan %bool %267 %float_9_99999975en05
        %269 = OpSelect %float %268 %float_1 %float_0
        %270 = OpCompositeConstruct %v3float %261 %265 %269
        %244 = OpExtInst %v3float %1 FMix %240 %56 %270
        %278 = OpExtInst %v3float %1 FAbs %156
        %280 = OpCompositeExtract %float %278 0
        %281 = OpFOrdLessThan %bool %280 %float_9_99999975en05
        %282 = OpSelect %float %281 %float_1 %float_0
        %284 = OpCompositeExtract %float %278 1
        %285 = OpFOrdLessThan %bool %284 %float_9_99999975en05
        %286 = OpSelect %float %285 %float_1 %float_0
        %288 = OpCompositeExtract %float %278 2
        %289 = OpFOrdLessThan %bool %288 %float_9_99999975en05
        %290 = OpSelect %float %289 %float_1 %float_0
        %291 = OpCompositeConstruct %v3float %282 %286 %290
        %248 = OpExtInst %v3float %1 FMix %244 %72 %291
        %162 = OpCompositeExtract %float %308 3
        %163 = OpVectorTimesScalar %v3float %248 %162
        %166 = OpCompositeExtract %float %163 0
        %167 = OpCompositeExtract %float %163 1
        %168 = OpCompositeExtract %float %163 2
        %169 = OpCompositeConstruct %v4float %166 %167 %168 %162
               OpStore %159 %169
               OpReturn
               OpFunctionEnd
