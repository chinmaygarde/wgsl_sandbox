; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 10
; Bound: 193
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %65 %93 %108
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %55 DescriptorSet 0
               OpDecorate %55 Binding 1
               OpDecorate %59 DescriptorSet 0
               OpDecorate %59 Binding 2
               OpDecorate %65 Location 0
               OpMemberDecorate %_struct_71 0 Offset 0
               OpMemberDecorate %_struct_71 1 Offset 16
               OpDecorate %_struct_71 Block
               OpDecorate %73 DescriptorSet 0
               OpDecorate %73 Binding 0
               OpDecorate %88 DescriptorSet 0
               OpDecorate %88 Binding 3
               OpDecorate %90 DescriptorSet 0
               OpDecorate %90 Binding 4
               OpDecorate %93 Location 1
               OpDecorate %108 Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
         %36 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
         %53 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_53 = OpTypePointer UniformConstant %53
         %55 = OpVariable %_ptr_UniformConstant_53 UniformConstant
         %57 = OpTypeSampler
%_ptr_UniformConstant_57 = OpTypePointer UniformConstant %57
         %59 = OpVariable %_ptr_UniformConstant_57 UniformConstant
         %61 = OpTypeSampledImage %53
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
         %65 = OpVariable %_ptr_Input_v2float Input
 %_struct_71 = OpTypeStruct %float %v4float
%_ptr_Uniform__struct_71 = OpTypePointer Uniform %_struct_71
         %73 = OpVariable %_ptr_Uniform__struct_71 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
         %88 = OpVariable %_ptr_UniformConstant_53 UniformConstant
         %90 = OpVariable %_ptr_UniformConstant_57 UniformConstant
         %93 = OpVariable %_ptr_Input_v2float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
        %108 = OpVariable %_ptr_Output_v4float Output
     %uint_0 = OpConstant %uint 0
          %4 = OpFunction %void None %3
          %5 = OpLabel
         %56 = OpLoad %53 %55
         %60 = OpLoad %57 %59
         %62 = OpSampledImage %61 %56 %60
         %66 = OpLoad %v2float %65
         %67 = OpImageSampleImplicitLod %v4float %62 %66
               OpSelectionMerge %150 None
               OpSwitch %uint_0 %132
        %132 = OpLabel
        %134 = OpCompositeExtract %float %67 3
        %135 = OpFOrdEqual %bool %134 %float_0
               OpSelectionMerge %137 None
               OpBranchConditional %135 %136 %137
        %136 = OpLabel
               OpBranch %150
        %137 = OpLabel
        %139 = OpVectorShuffle %v3float %67 %67 0 1 2
        %142 = OpCompositeConstruct %v3float %134 %134 %134
        %143 = OpFDiv %v3float %139 %142
        %146 = OpCompositeExtract %float %143 0
        %147 = OpCompositeExtract %float %143 1
        %148 = OpCompositeExtract %float %143 2
        %149 = OpCompositeConstruct %v4float %146 %147 %148 %134
               OpBranch %150
        %150 = OpLabel
        %190 = OpPhi %v4float %36 %136 %149 %137
         %77 = OpAccessChain %_ptr_Uniform_float %73 %int_0
         %78 = OpLoad %float %77
         %79 = OpFOrdGreaterThan %bool %78 %float_0
               OpSelectionMerge %82 None
               OpBranchConditional %79 %81 %87
         %81 = OpLabel
         %85 = OpAccessChain %_ptr_Uniform_v4float %73 %int_1
         %86 = OpLoad %v4float %85
               OpBranch %82
         %87 = OpLabel
         %89 = OpLoad %53 %88
         %91 = OpLoad %57 %90
         %92 = OpSampledImage %61 %89 %91
         %94 = OpLoad %v2float %93
         %95 = OpImageSampleImplicitLod %v4float %92 %94
               OpSelectionMerge %174 None
               OpSwitch %uint_0 %156
        %156 = OpLabel
        %158 = OpCompositeExtract %float %95 3
        %159 = OpFOrdEqual %bool %158 %float_0
               OpSelectionMerge %161 None
               OpBranchConditional %159 %160 %161
        %160 = OpLabel
               OpBranch %174
        %161 = OpLabel
        %163 = OpVectorShuffle %v3float %95 %95 0 1 2
        %166 = OpCompositeConstruct %v3float %158 %158 %158
        %167 = OpFDiv %v3float %163 %166
        %170 = OpCompositeExtract %float %167 0
        %171 = OpCompositeExtract %float %167 1
        %172 = OpCompositeExtract %float %167 2
        %173 = OpCompositeConstruct %v4float %170 %171 %172 %158
               OpBranch %174
        %174 = OpLabel
        %191 = OpPhi %v4float %36 %160 %173 %161
               OpBranch %82
         %82 = OpLabel
        %192 = OpPhi %v4float %86 %81 %191 %174
        %102 = OpVectorShuffle %v3float %190 %190 0 1 2
        %105 = OpVectorShuffle %v3float %192 %192 0 1 2
        %180 = OpFSub %v3float %102 %105
        %181 = OpExtInst %v3float %1 FAbs %180
        %111 = OpCompositeExtract %float %192 3
        %112 = OpVectorTimesScalar %v3float %181 %111
        %115 = OpCompositeExtract %float %112 0
        %116 = OpCompositeExtract %float %112 1
        %117 = OpCompositeExtract %float %112 2
        %118 = OpCompositeConstruct %v4float %115 %116 %117 %111
               OpStore %108 %118
               OpReturn
               OpFunctionEnd
