; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 10
; Bound: 191
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %64 %92 %107
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %54 DescriptorSet 0
               OpDecorate %54 Binding 1
               OpDecorate %58 DescriptorSet 0
               OpDecorate %58 Binding 2
               OpDecorate %64 Location 0
               OpMemberDecorate %_struct_70 0 Offset 0
               OpMemberDecorate %_struct_70 1 Offset 16
               OpDecorate %_struct_70 Block
               OpDecorate %72 DescriptorSet 0
               OpDecorate %72 Binding 0
               OpDecorate %87 DescriptorSet 0
               OpDecorate %87 Binding 3
               OpDecorate %89 DescriptorSet 0
               OpDecorate %89 Binding 4
               OpDecorate %92 Location 1
               OpDecorate %107 Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
         %35 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
         %52 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_52 = OpTypePointer UniformConstant %52
         %54 = OpVariable %_ptr_UniformConstant_52 UniformConstant
         %56 = OpTypeSampler
%_ptr_UniformConstant_56 = OpTypePointer UniformConstant %56
         %58 = OpVariable %_ptr_UniformConstant_56 UniformConstant
         %60 = OpTypeSampledImage %52
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
         %64 = OpVariable %_ptr_Input_v2float Input
 %_struct_70 = OpTypeStruct %float %v4float
%_ptr_Uniform__struct_70 = OpTypePointer Uniform %_struct_70
         %72 = OpVariable %_ptr_Uniform__struct_70 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
         %87 = OpVariable %_ptr_UniformConstant_52 UniformConstant
         %89 = OpVariable %_ptr_UniformConstant_56 UniformConstant
         %92 = OpVariable %_ptr_Input_v2float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
        %107 = OpVariable %_ptr_Output_v4float Output
     %uint_0 = OpConstant %uint 0
          %4 = OpFunction %void None %3
          %5 = OpLabel
         %55 = OpLoad %52 %54
         %59 = OpLoad %56 %58
         %61 = OpSampledImage %60 %55 %59
         %65 = OpLoad %v2float %64
         %66 = OpImageSampleImplicitLod %v4float %61 %65
               OpSelectionMerge %149 None
               OpSwitch %uint_0 %131
        %131 = OpLabel
        %133 = OpCompositeExtract %float %66 3
        %134 = OpFOrdEqual %bool %133 %float_0
               OpSelectionMerge %136 None
               OpBranchConditional %134 %135 %136
        %135 = OpLabel
               OpBranch %149
        %136 = OpLabel
        %138 = OpVectorShuffle %v3float %66 %66 0 1 2
        %141 = OpCompositeConstruct %v3float %133 %133 %133
        %142 = OpFDiv %v3float %138 %141
        %145 = OpCompositeExtract %float %142 0
        %146 = OpCompositeExtract %float %142 1
        %147 = OpCompositeExtract %float %142 2
        %148 = OpCompositeConstruct %v4float %145 %146 %147 %133
               OpBranch %149
        %149 = OpLabel
        %188 = OpPhi %v4float %35 %135 %148 %136
         %76 = OpAccessChain %_ptr_Uniform_float %72 %int_0
         %77 = OpLoad %float %76
         %78 = OpFOrdGreaterThan %bool %77 %float_0
               OpSelectionMerge %81 None
               OpBranchConditional %78 %80 %86
         %80 = OpLabel
         %84 = OpAccessChain %_ptr_Uniform_v4float %72 %int_1
         %85 = OpLoad %v4float %84
               OpBranch %81
         %86 = OpLabel
         %88 = OpLoad %52 %87
         %90 = OpLoad %56 %89
         %91 = OpSampledImage %60 %88 %90
         %93 = OpLoad %v2float %92
         %94 = OpImageSampleImplicitLod %v4float %91 %93
               OpSelectionMerge %173 None
               OpSwitch %uint_0 %155
        %155 = OpLabel
        %157 = OpCompositeExtract %float %94 3
        %158 = OpFOrdEqual %bool %157 %float_0
               OpSelectionMerge %160 None
               OpBranchConditional %158 %159 %160
        %159 = OpLabel
               OpBranch %173
        %160 = OpLabel
        %162 = OpVectorShuffle %v3float %94 %94 0 1 2
        %165 = OpCompositeConstruct %v3float %157 %157 %157
        %166 = OpFDiv %v3float %162 %165
        %169 = OpCompositeExtract %float %166 0
        %170 = OpCompositeExtract %float %166 1
        %171 = OpCompositeExtract %float %166 2
        %172 = OpCompositeConstruct %v4float %169 %170 %171 %157
               OpBranch %173
        %173 = OpLabel
        %189 = OpPhi %v4float %35 %159 %172 %160
               OpBranch %81
         %81 = OpLabel
        %190 = OpPhi %v4float %85 %80 %189 %173
        %101 = OpVectorShuffle %v3float %188 %188 0 1 2
        %104 = OpVectorShuffle %v3float %190 %190 0 1 2
        %179 = OpFMul %v3float %101 %104
        %110 = OpCompositeExtract %float %190 3
        %111 = OpVectorTimesScalar %v3float %179 %110
        %114 = OpCompositeExtract %float %111 0
        %115 = OpCompositeExtract %float %111 1
        %116 = OpCompositeExtract %float %111 2
        %117 = OpCompositeConstruct %v4float %114 %115 %116 %110
               OpStore %107 %117
               OpReturn
               OpFunctionEnd
