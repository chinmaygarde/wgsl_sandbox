; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 10
; Bound: 202
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %70 %98 %113
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %60 DescriptorSet 0
               OpDecorate %60 Binding 1
               OpDecorate %64 DescriptorSet 0
               OpDecorate %64 Binding 2
               OpDecorate %70 Location 0
               OpMemberDecorate %_struct_76 0 Offset 0
               OpMemberDecorate %_struct_76 1 Offset 16
               OpDecorate %_struct_76 Block
               OpDecorate %78 DescriptorSet 0
               OpDecorate %78 Binding 0
               OpDecorate %93 DescriptorSet 0
               OpDecorate %93 Binding 3
               OpDecorate %95 DescriptorSet 0
               OpDecorate %95 Binding 4
               OpDecorate %98 Location 1
               OpDecorate %113 Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
    %float_2 = OpConstant %float 2
       %uint = OpTypeInt 32 0
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
         %41 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
         %58 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_58 = OpTypePointer UniformConstant %58
         %60 = OpVariable %_ptr_UniformConstant_58 UniformConstant
         %62 = OpTypeSampler
%_ptr_UniformConstant_62 = OpTypePointer UniformConstant %62
         %64 = OpVariable %_ptr_UniformConstant_62 UniformConstant
         %66 = OpTypeSampledImage %58
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
         %70 = OpVariable %_ptr_Input_v2float Input
 %_struct_76 = OpTypeStruct %float %v4float
%_ptr_Uniform__struct_76 = OpTypePointer Uniform %_struct_76
         %78 = OpVariable %_ptr_Uniform__struct_76 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
         %93 = OpVariable %_ptr_UniformConstant_58 UniformConstant
         %95 = OpVariable %_ptr_UniformConstant_62 UniformConstant
         %98 = OpVariable %_ptr_Input_v2float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
        %113 = OpVariable %_ptr_Output_v4float Output
     %uint_0 = OpConstant %uint 0
          %4 = OpFunction %void None %3
          %5 = OpLabel
         %61 = OpLoad %58 %60
         %65 = OpLoad %62 %64
         %67 = OpSampledImage %66 %61 %65
         %71 = OpLoad %v2float %70
         %72 = OpImageSampleImplicitLod %v4float %67 %71
               OpSelectionMerge %155 None
               OpSwitch %uint_0 %137
        %137 = OpLabel
        %139 = OpCompositeExtract %float %72 3
        %140 = OpFOrdEqual %bool %139 %float_0
               OpSelectionMerge %142 None
               OpBranchConditional %140 %141 %142
        %141 = OpLabel
               OpBranch %155
        %142 = OpLabel
        %144 = OpVectorShuffle %v3float %72 %72 0 1 2
        %147 = OpCompositeConstruct %v3float %139 %139 %139
        %148 = OpFDiv %v3float %144 %147
        %151 = OpCompositeExtract %float %148 0
        %152 = OpCompositeExtract %float %148 1
        %153 = OpCompositeExtract %float %148 2
        %154 = OpCompositeConstruct %v4float %151 %152 %153 %139
               OpBranch %155
        %155 = OpLabel
        %199 = OpPhi %v4float %41 %141 %154 %142
         %82 = OpAccessChain %_ptr_Uniform_float %78 %int_0
         %83 = OpLoad %float %82
         %84 = OpFOrdGreaterThan %bool %83 %float_0
               OpSelectionMerge %87 None
               OpBranchConditional %84 %86 %92
         %86 = OpLabel
         %90 = OpAccessChain %_ptr_Uniform_v4float %78 %int_1
         %91 = OpLoad %v4float %90
               OpBranch %87
         %92 = OpLabel
         %94 = OpLoad %58 %93
         %96 = OpLoad %62 %95
         %97 = OpSampledImage %66 %94 %96
         %99 = OpLoad %v2float %98
        %100 = OpImageSampleImplicitLod %v4float %97 %99
               OpSelectionMerge %179 None
               OpSwitch %uint_0 %161
        %161 = OpLabel
        %163 = OpCompositeExtract %float %100 3
        %164 = OpFOrdEqual %bool %163 %float_0
               OpSelectionMerge %166 None
               OpBranchConditional %164 %165 %166
        %165 = OpLabel
               OpBranch %179
        %166 = OpLabel
        %168 = OpVectorShuffle %v3float %100 %100 0 1 2
        %171 = OpCompositeConstruct %v3float %163 %163 %163
        %172 = OpFDiv %v3float %168 %171
        %175 = OpCompositeExtract %float %172 0
        %176 = OpCompositeExtract %float %172 1
        %177 = OpCompositeExtract %float %172 2
        %178 = OpCompositeConstruct %v4float %175 %176 %177 %163
               OpBranch %179
        %179 = OpLabel
        %200 = OpPhi %v4float %41 %165 %178 %166
               OpBranch %87
         %87 = OpLabel
        %201 = OpPhi %v4float %91 %86 %200 %179
        %107 = OpVectorShuffle %v3float %199 %199 0 1 2
        %110 = OpVectorShuffle %v3float %201 %201 0 1 2
        %185 = OpFAdd %v3float %107 %110
        %187 = OpVectorTimesScalar %v3float %107 %float_2
        %189 = OpFMul %v3float %187 %110
        %190 = OpFSub %v3float %185 %189
        %116 = OpCompositeExtract %float %201 3
        %117 = OpVectorTimesScalar %v3float %190 %116
        %120 = OpCompositeExtract %float %117 0
        %121 = OpCompositeExtract %float %117 1
        %122 = OpCompositeExtract %float %117 2
        %123 = OpCompositeConstruct %v4float %120 %121 %122 %116
               OpStore %113 %123
               OpReturn
               OpFunctionEnd
