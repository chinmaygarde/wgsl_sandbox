; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 10
; Bound: 217
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %79 %107 %122
               OpExecutionMode %4 OriginUpperLeft
               OpDecorate %69 DescriptorSet 0
               OpDecorate %69 Binding 1
               OpDecorate %73 DescriptorSet 0
               OpDecorate %73 Binding 2
               OpDecorate %79 Location 0
               OpMemberDecorate %_struct_85 0 Offset 0
               OpMemberDecorate %_struct_85 1 Offset 16
               OpDecorate %_struct_85 Block
               OpDecorate %87 DescriptorSet 0
               OpDecorate %87 Binding 0
               OpDecorate %102 DescriptorSet 0
               OpDecorate %102 Binding 3
               OpDecorate %104 DescriptorSet 0
               OpDecorate %104 Binding 4
               OpDecorate %107 Location 1
               OpDecorate %122 Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
    %float_0 = OpConstant %float 0
       %bool = OpTypeBool
         %50 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
         %67 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_67 = OpTypePointer UniformConstant %67
         %69 = OpVariable %_ptr_UniformConstant_67 UniformConstant
         %71 = OpTypeSampler
%_ptr_UniformConstant_71 = OpTypePointer UniformConstant %71
         %73 = OpVariable %_ptr_UniformConstant_71 UniformConstant
         %75 = OpTypeSampledImage %67
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
         %79 = OpVariable %_ptr_Input_v2float Input
 %_struct_85 = OpTypeStruct %float %v4float
%_ptr_Uniform__struct_85 = OpTypePointer Uniform %_struct_85
         %87 = OpVariable %_ptr_Uniform__struct_85 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
        %102 = OpVariable %_ptr_UniformConstant_67 UniformConstant
        %104 = OpVariable %_ptr_UniformConstant_71 UniformConstant
        %107 = OpVariable %_ptr_Input_v2float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
        %122 = OpVariable %_ptr_Output_v4float Output
     %uint_0 = OpConstant %uint 0
          %4 = OpFunction %void None %3
          %5 = OpLabel
         %70 = OpLoad %67 %69
         %74 = OpLoad %71 %73
         %76 = OpSampledImage %75 %70 %74
         %80 = OpLoad %v2float %79
         %81 = OpImageSampleImplicitLod %v4float %76 %80
               OpSelectionMerge %164 None
               OpSwitch %uint_0 %146
        %146 = OpLabel
        %148 = OpCompositeExtract %float %81 3
        %149 = OpFOrdEqual %bool %148 %float_0
               OpSelectionMerge %151 None
               OpBranchConditional %149 %150 %151
        %150 = OpLabel
               OpBranch %164
        %151 = OpLabel
        %153 = OpVectorShuffle %v3float %81 %81 0 1 2
        %156 = OpCompositeConstruct %v3float %148 %148 %148
        %157 = OpFDiv %v3float %153 %156
        %160 = OpCompositeExtract %float %157 0
        %161 = OpCompositeExtract %float %157 1
        %162 = OpCompositeExtract %float %157 2
        %163 = OpCompositeConstruct %v4float %160 %161 %162 %148
               OpBranch %164
        %164 = OpLabel
        %214 = OpPhi %v4float %50 %150 %163 %151
         %91 = OpAccessChain %_ptr_Uniform_float %87 %int_0
         %92 = OpLoad %float %91
         %93 = OpFOrdGreaterThan %bool %92 %float_0
               OpSelectionMerge %96 None
               OpBranchConditional %93 %95 %101
         %95 = OpLabel
         %99 = OpAccessChain %_ptr_Uniform_v4float %87 %int_1
        %100 = OpLoad %v4float %99
               OpBranch %96
        %101 = OpLabel
        %103 = OpLoad %67 %102
        %105 = OpLoad %71 %104
        %106 = OpSampledImage %75 %103 %105
        %108 = OpLoad %v2float %107
        %109 = OpImageSampleImplicitLod %v4float %106 %108
               OpSelectionMerge %188 None
               OpSwitch %uint_0 %170
        %170 = OpLabel
        %172 = OpCompositeExtract %float %109 3
        %173 = OpFOrdEqual %bool %172 %float_0
               OpSelectionMerge %175 None
               OpBranchConditional %173 %174 %175
        %174 = OpLabel
               OpBranch %188
        %175 = OpLabel
        %177 = OpVectorShuffle %v3float %109 %109 0 1 2
        %180 = OpCompositeConstruct %v3float %172 %172 %172
        %181 = OpFDiv %v3float %177 %180
        %184 = OpCompositeExtract %float %181 0
        %185 = OpCompositeExtract %float %181 1
        %186 = OpCompositeExtract %float %181 2
        %187 = OpCompositeConstruct %v4float %184 %185 %186 %172
               OpBranch %188
        %188 = OpLabel
        %215 = OpPhi %v4float %50 %174 %187 %175
               OpBranch %96
         %96 = OpLabel
        %216 = OpPhi %v4float %100 %95 %215 %188
        %116 = OpVectorShuffle %v3float %214 %214 0 1 2
        %119 = OpVectorShuffle %v3float %216 %216 0 1 2
        %201 = OpFAdd %v3float %116 %119
        %204 = OpFMul %v3float %116 %119
        %205 = OpFSub %v3float %201 %204
        %125 = OpCompositeExtract %float %216 3
        %126 = OpVectorTimesScalar %v3float %205 %125
        %129 = OpCompositeExtract %float %126 0
        %130 = OpCompositeExtract %float %126 1
        %131 = OpCompositeExtract %float %126 2
        %132 = OpCompositeConstruct %v4float %129 %130 %131 %125
               OpStore %122 %132
               OpReturn
               OpFunctionEnd
